datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  email           String    @unique
  emailVerified   DateTime?
  image           String?
  hashedPassword  String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  role            Role      @default(USER)
  accounts        Account[]

}

// model Post {
//   id        String    @id @default(auto()) @map("_id") @db.ObjectId
//   title     String
//   content   String?
//   published Boolean   @default(false)
//   authorId  String    @db.ObjectId
//   author    User      @relation(fields: [authorId], references: [id])
//   createdAt DateTime  @default(now())
//   updatedAt DateTime  @updatedAt
// }


model Account {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            String   @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  
  access_token      String?  
  expires_at        Int?     
  token_type        String?  
  scope             String?  
  id_token          String?  
  session_state     String?  

  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

enum Role {
  USER
  ADMIN
}
